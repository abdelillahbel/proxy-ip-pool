<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chqiuu.proxy.modules.pool.mapper.ProxyIpMapper">
    <!-- 代理IP 表名：`proxy_ip` -->
    <sql id="Base_Column_List">
        `proxy_id`
        ,`ip_address`,`ip_port`,`country`,`location`,`https`,`http`,`anonymity`,`available`,`last_validate_time`,`validate_count`,`available_count`,`unavailable_count`,`failure_time`,`use_times`,`available_rate`,`use_size`,`fail_size`,`create_time`,`update_time`
    </sql>
    <sql id="Base_PI_Column_List">
        pi
        .
        `proxy_id`
        ,pi.`ip_address`,pi.`ip_port`,pi.`country`,pi.`location`,pi.`https`,pi.`http`,pi.`anonymity`,pi.`available`,pi.`last_validate_time`,pi.`validate_count`,pi.`available_count`,pi.`unavailable_count`,pi.`failure_time`,pi.`use_times`,pi.`available_rate`,pi.`use_size`,pi.`fail_size`,pi.`create_time`,pi.`update_time`
    </sql>

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap id="BaseResultMap" type="com.chqiuu.proxy.modules.pool.entity.ProxyIpEntity">
        <result property="proxyId" column="proxy_id"/>
        <result property="ipAddress" column="ip_address"/>
        <result property="ipPort" column="ip_port"/>
        <result property="country" column="country"/>
        <result property="location" column="location"/>
        <result property="https" column="https"/>
        <result property="http" column="http"/>
        <result property="anonymity" column="anonymity"/>
        <result property="available" column="available"/>
        <result property="lastValidateTime" column="last_validate_time"/>
        <result property="validateCount" column="validate_count"/>
        <result property="availableCount" column="available_count"/>
        <result property="unavailableCount" column="unavailable_count"/>
        <result property="failureTime" column="failure_time"/>
        <result property="useTimes" column="use_times"/>
        <result property="availableRate" column="available_rate"/>
        <result property="useSize" column="use_size"/>
        <result property="failSize" column="fail_size"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <!--根据唯一ID获取详细信息-->
    <select id="getDetailById" resultType="com.chqiuu.proxy.modules.pool.dto.ProxyIpDetailDTO">
        SELECT
        <include refid="Base_PI_Column_List"/>
        FROM `proxy_ip` AS pi where pi.`proxy_id` = #{proxyId}
    </select>
    <!--代理IP列表查询-->
    <select id="getList" parameterType="com.chqiuu.proxy.modules.pool.query.ProxyIpListQuery"
            resultType="com.chqiuu.proxy.modules.pool.dto.ProxyIpListDTO">
        SELECT
        <include refid="Base_PI_Column_List"/>
        FROM `proxy_ip` AS pi WHERE 1 = 1
        <if test="query.ipAddress != null and query.ipAddress != ''">
            AND pi.`ip_address` LIKE CONCAT(#{query.ipAddress},'%')
        </if>
        <if test="query.ipPort != null ">
            AND pi.`ip_port` = #{query.ipPort}
        </if>
        <if test="query.country != null and query.country != ''">
            AND pi.`country` LIKE CONCAT(#{query.country},'%')
        </if>
        <if test="query.location != null and query.location != ''">
            AND pi.`location` LIKE CONCAT(#{query.location},'%')
        </if>
        <if test="query.https != null ">
            AND pi.`https` = #{query.https}
        </if>
        <if test="query.http != null ">
            AND pi.`http` = #{query.http}
        </if>
        <if test="query.anonymity != null ">
            AND pi.`anonymity` = #{query.anonymity}
        </if>
        <if test="query.available != null ">
            AND pi.`available` = #{query.available}
        </if>
        <if test="query.lastValidateTime != null ">
            AND pi.`last_validate_time` = #{query.lastValidateTime}
        </if>
        <if test="query.validateCount != null ">
            AND pi.`validate_count` = #{query.validateCount}
        </if>
        <if test="query.availableCount != null ">
            AND pi.`available_count` = #{query.availableCount}
        </if>
        <if test="query.unavailableCount != null ">
            AND pi.`unavailable_count` = #{query.unavailableCount}
        </if>
        <if test="query.failureTime != null ">
            AND pi.`failure_time` = #{query.failureTime}
        </if>
        <if test="query.useTimes != null ">
            AND pi.`use_times` = #{query.useTimes}
        </if>
        <if test="query.availableRate != null ">
            AND pi.`available_rate` = #{query.availableRate}
        </if>
        <if test="query.useSize != null ">
            AND pi.`use_size` = #{query.useSize}
        </if>
        <if test="query.failSize != null ">
            AND pi.`fail_size` = #{query.failSize}
        </if>
        <choose>
            <when test="sortParam=='proxyId'">
                <choose>
                    <when test="sortord=='asc'">
                        ORDER BY pi.`proxy_id` asc
                    </when>
                    <otherwise>
                        ORDER BY pi.`proxy_id` desc
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                <choose>
                    <when test="sortord=='asc'">
                        ORDER BY pi.`create_time` asc
                    </when>
                    <otherwise>
                        ORDER BY pi.`create_time` desc
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
    </select>
    <!--代理IP分页查询-->
    <select id="getPage" parameterType="com.chqiuu.proxy.modules.pool.query.ProxyIpPageQuery"
            resultType="com.chqiuu.proxy.modules.pool.dto.ProxyIpListDTO">
        SELECT
        <include refid="Base_PI_Column_List"/>
        FROM `proxy_ip` AS pi WHERE 1 = 1
        <if test="query.ipAddress != null and query.ipAddress != ''">
            AND pi.`ip_address` LIKE CONCAT(#{query.ipAddress},'%')
        </if>
        <if test="query.ipPort != null ">
            AND pi.`ip_port` = #{query.ipPort}
        </if>
        <if test="query.country != null and query.country != ''">
            AND pi.`country` LIKE CONCAT(#{query.country},'%')
        </if>
        <if test="query.location != null and query.location != ''">
            AND pi.`location` LIKE CONCAT(#{query.location},'%')
        </if>
        <if test="query.https != null ">
            AND pi.`https` = #{query.https}
        </if>
        <if test="query.http != null ">
            AND pi.`http` = #{query.http}
        </if>
        <if test="query.anonymity != null ">
            AND pi.`anonymity` = #{query.anonymity}
        </if>
        <if test="query.available != null ">
            AND pi.`available` = #{query.available}
        </if>
        <if test="query.lastValidateTime != null ">
            AND pi.`last_validate_time` = #{query.lastValidateTime}
        </if>
        <if test="query.validateCount != null ">
            AND pi.`validate_count` = #{query.validateCount}
        </if>
        <if test="query.availableCount != null ">
            AND pi.`available_count` = #{query.availableCount}
        </if>
        <if test="query.unavailableCount != null ">
            AND pi.`unavailable_count` = #{query.unavailableCount}
        </if>
        <if test="query.failureTime != null ">
            AND pi.`failure_time` = #{query.failureTime}
        </if>
        <if test="query.useTimes != null ">
            AND pi.`use_times` = #{query.useTimes}
        </if>
        <if test="query.availableRate != null ">
            AND pi.`available_rate` = #{query.availableRate}
        </if>
        <if test="query.useSize != null ">
            AND pi.`use_size` = #{query.useSize}
        </if>
        <if test="query.failSize != null ">
            AND pi.`fail_size` = #{query.failSize}
        </if>
        <choose>
            <when test="query.sortParam=='proxyId'">
                <choose>
                    <when test="query.sortord=='asc'">
                        ORDER BY pi.`proxy_id` asc
                    </when>
                    <otherwise>
                        ORDER BY pi.`proxy_id` desc
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                <choose>
                    <when test="query.sortord=='asc'">
                        ORDER BY pi.`create_time` asc
                    </when>
                    <otherwise>
                        ORDER BY pi.`create_time` desc
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
    </select>
    <!-- 代理IP API分页查询-->
    <select id="getCommonPage" parameterType="com.chqiuu.proxy.modules.api.query.ProxyIpCommonPageQuery"
            resultType="com.chqiuu.proxy.modules.api.dto.ProxyIpCommonListDTO">
        SELECT pi.`proxy_id`,pi.`ip_address`,pi.`ip_port`,pi.`location`,pi.`https`,pi.`http`,pi.`anonymity`,pi.`last_validate_time`,pi.`create_time`
        FROM `proxy_ip` AS pi WHERE 1 = 1
        <if test="query.https != null ">
            AND pi.`https` = #{query.https}
        </if>
        <if test="query.http != null ">
            AND pi.`http` = #{query.http}
        </if>
        <if test="query.anonymity != null ">
            AND pi.`anonymity` = #{query.anonymity}
        </if>
        <choose>
            <when test="query.sortParam=='proxyId'">
                <choose>
                    <when test="query.sortord=='asc'">
                        ORDER BY pi.`proxy_id` asc
                    </when>
                    <otherwise>
                        ORDER BY pi.`proxy_id` desc
                    </otherwise>
                </choose>
            </when>
            <when test="query.sortParam=='lastValidateTime'">
                <choose>
                    <when test="query.sortord=='asc'">
                        ORDER BY pi.`last_validate_time` asc
                    </when>
                    <otherwise>
                        ORDER BY pi.`last_validate_time` desc
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                <choose>
                    <when test="query.sortord=='asc'">
                        ORDER BY pi.`create_time` asc
                    </when>
                    <otherwise>
                        ORDER BY pi.`create_time` desc
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
    </select>
</mapper>